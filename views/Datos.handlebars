<h1>Skate Park</h1>

<div class="py-4">
  <h2>Datos del perfil</h2>
  <hr class="w-50" />

  <form id="form">
    <div class="row w-50 m-auto">
      <div
        id="registerPhoto"
        style="background-image: url('{{data.foto}}')"        class="registerPhoto"
        accept="image/*"
      ></div>
      <div class="col-12 col-sm-12">
        <label>Foto:</label>

        <input
          id="photoFile"
          type="file"
          name="photo"
          class="form-control m-auto"
          onchange="localReadAndPreviewPhoto(this)"
        />
      </div>

     <div class="form-group row w-100 m-auto">
          <div class="form-group col-12 col-sm-6">
            <label>Email</label>
            <input id="email" readonly name="email" class="form-control m-auto" validated="true" value={{data.email}} onkeyup="validateEmail(this)" />
            <p class="input_info">Campo obligatorio. Formato aaa@aaa.aa</p>
          </div>
          <div class="form-group col-12 col-sm-6">
            <label>Nombre</label>
            <input id="nombre" name="nombre" class="form-control m-auto" validated="true" value='{{{data.nombre}}}' onkeyup="validateNombre(this)" />
            <p class="input_info">Campo obligatorio. No puede tener mas de 30 caracteres</p>
          </div>
          <div class="form-group col-12 col-sm-6">
            <label>Password</label>
            <input id="password" name="password" class="form-control m-auto" validated="true" value={{data.password}} onkeyup="validatePassword(this)" />
            <p class="input_info">Campo obligatorio. No puede tener mas de 30 caracteres</p>
          </div>
          <div class="form-group col-12 col-sm-6">
            <label>Repita la password</label>
            <input id="confirmedPassword" name="confirmedPassword" class="form-control m-auto" validated="true" value={{data.password}} onkeyup="validateConfirmedPassword(this)" />
            <p class="input_info">Campo obligatorio. Debe ser idéntico al campo Password</p>
          </div>
          <div class="form-group col-12 col-sm-6">
            <label>Años de experiencia</label>
            <input id="anos_experiencia" name="anos_experiencia"  type="number" min="0" max="60" class="form-control m-auto" validated="true"  value={{data.anos_experiencia}} onchange="validateAnosExperiencia(this)"/>
            <p class="input_info">Campo obligatorio. Debe ser un numero desde 0 hasta 60</p>
          </div>
          <div class="form-group col-12 col-sm-6">
            <label>Especialidad</label>
            <input id="especialidad" name="especialidad" class="form-control m-auto" validated="true" value='{{data.especialidad}}' onkeyup="validateEspecialidad(this)" />
            <p class="input_info">Campo obligatorio. No puede tener más de 20 caracteres</p>
          </div>
      </div>
    <input id="id"type="number" name="id" class="d-none" value={{data.id}}>
    </div>
    <div class="mb-1">
      <button class="btn btn-primary" type="submit">Actualizar</button>
    </div>
  </form>
    <div>
      <button id="deleteBtn" class="btn btn-danger">Eliminar cuenta</button>
    </div>

</div>

<script>

  //validaciones de formulario
  const form = document.getElementById("form"); 
  
  form.addEventListener("submit",async(e)=>{
    
  e.preventDefault(); 
  let inputArrayWithoutPhotoOrID =  [...document.querySelectorAll("input")].splice(1,6)
 
  if (inputArrayWithoutPhotoOrID.some((i)=>i.attributes.validated.value=="false")){alert("Hay al menos un campo incorrecto. Por favor corregir e intentar nuevamente."); return}

  
  const form2 = new FormData(form) 
  const res = await axios.put("/Datos",form2, {Headers: { 'Content-type': 'multipart/form-data'
  }}) 

  alert(res.data); 
  window.location = "/"
  })


$("#deleteBtn").click(async()=>{
  const id = parseInt($("#id").val());
  const {data} = await axios.delete("/Datos",{data:{id:id}})
  alert(data)
  window.location = "/"
})



const localReadAndPreviewPhoto = (input) => { if (input.files &&
  input.files[0]) { var reader = new FileReader(); reader.onload = function (e)
  { $('#registerPhoto') [0].style.backgroundImage= `url(${e.target.result})` ;
  $('#registerPhoto') [0].style.border= `none` ; };
  reader.readAsDataURL(input.files[0]); } }
  





const validateNombre = (nombre)=>{
  if (nombre.value.length>0 && nombre.value.length <30){nombre.style.backgroundColor="paleGreen";
   nombre.setAttribute("validated","true");
    nombre.nextElementSibling.style.display="none"
  }
  else{nombre.style.backgroundColor ="pink"; 
  nombre.nextElementSibling.style.display="block"
  nombre.setAttribute("validated","false")}

}

const validatePassword = (password)=>{
   if (password.value.length>0 && password.value.length <30){password.style.backgroundColor="paleGreen";
   password.setAttribute("validated","true");
    password.nextElementSibling.style.display="none"
  }
  else{password.style.backgroundColor ="pink"; 
  password.nextElementSibling.style.display="block"
  password.setAttribute("validated","false")}

}

const validateConfirmedPassword = (cPassword)=>{
  let passwordValue = $("#password")[0].value
  let cPasswordValue =cPassword.value
   if (cPasswordValue === passwordValue){cPassword.style.backgroundColor="paleGreen";
   cPassword.setAttribute("validated","true");
    cPassword.nextElementSibling.style.display="none"
  }
  else{cPassword.style.backgroundColor ="pink"; 
  cPassword.nextElementSibling.style.display="block"
  cPassword.setAttribute("validated","false")}

}

const validateAnosExperiencia = (anos)=>{
  const re = /^[0-80]\d*$/
  if (re.test(anos.value)){anos.style.backgroundColor="paleGreen";
   anos.setAttribute("validated","true");
    anos.nextElementSibling.style.display="none"
  }
  else{anos.style.backgroundColor ="pink"; 
  anos.nextElementSibling.style.display="block"
  anos.setAttribute("validated","false")}

}


const validateEspecialidad = (especialidad)=>{
  if (especialidad.value.length>0 && especialidad.value.length <20){especialidad.style.backgroundColor="paleGreen";
   especialidad.setAttribute("validated","true");
    especialidad.nextElementSibling.style.display="none"
  }
  else{especialidad.style.backgroundColor ="pink"; 
  especialidad.nextElementSibling.style.display="block"
  especialidad.setAttribute("validated","false")}

}





</script>